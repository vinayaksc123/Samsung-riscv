#include <ch32v00x.h>
#include <debug.h>

// Define GPIO pins
#define IR_SENSOR_PIN GPIO_Pin_2  // IR sensor on PD2
#define BUZZER_PIN GPIO_Pin_3     // Buzzer/LED on PD3

// GPIO Configuration Function
void GPIO_Config(void)
{
    GPIO_InitTypeDef GPIO_InitStructure = {0};

    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE); // Enable clock for GPIOD

    // Configure PD2 as input (IR Sensor) with pull-up
    GPIO_InitStructure.GPIO_Pin = IR_SENSOR_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; // Input with Internal Pull-Up
    GPIO_Init(GPIOD, &GPIO_InitStructure);

    // Configure PD3 as output (Buzzer/LED)
    GPIO_InitStructure.GPIO_Pin = BUZZER_PIN;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; // Push-Pull Output
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(GPIOD, &GPIO_InitStructure);
}

// Main function
int main(void)
{
    SystemCoreClockUpdate(); // Update System Clock
    Delay_Init();            // Initialize delay functions
    GPIO_Config();           // Configure GPIO

    while (1)
    {
        if (GPIO_ReadInputDataBit(GPIOD, IR_SENSOR_PIN) == 0) // IR Sensor detects motion (active-low)
        {
            GPIO_SetBits(GPIOD, BUZZER_PIN); // Turn ON buzzer/LED
            Delay_Ms(200);  // Small delay to avoid rapid switching
        }
        else
        {
            GPIO_ResetBits(GPIOD, BUZZER_PIN); // Turn OFF buzzer/LED
        }
    }
}
